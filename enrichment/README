enrichment.py v0.1

Jamie Shallcross
Whelan Lab
Dept of Chemistry & Biochemistry
Oberlin College
Written Summer 2013
                                                                                               
Tentative GPL License (feel free to use, modify, distribute, but give credit 
and keep it open source)
                                                                                               
Send bug reports to jshallcr@cs.oberlin.edu or rwhelan@oberlin.edu

Requires that NumPy be installed. NumPy can be downloaded at http://www.scipy.org/install.html

This program was created to analyze high throughput sequencing data produced from 
SELEX type experiments. The idea is that the overall percent enrichment between the 
first (ie library) round and the final round, so called "fold enrichment" is more 
indicative of a successful aptamer sequence than just overall abundance in later rounds, 
since libraries are often not truly random and PCR may favor some sequences over others,
an initial bias can give a certain sequence a head start over other sequences that are 
actually bind to the target better.  

This program is invoked by calling the python interpreter to run the program, with a set
of arguments specifying the files with which you wish to work, in the format

    python enrichment.py [flags] [base_file] [secondary_file_a] [secondary_file_b] ...

Flags are optional arguments that tell the program more about how you want it to work.
The -o flag specifies output to a file named, rather than the terminal, and most users 
will want to use this. Other arguments are detailed below. 

The "Base File" used by this program is the round to which all other rounds are compared. 
It is usually either the final round of SELEX, or the round which has been determined to 
have the greatest bulk affinity, such as through flouresence measurements. Any sequence not 
included in this file at an abundance greater than the given threshold  specified by the -t 
flag (and is 0 by default) will not be included in either the analysis or output. 

The "Secondary Files" are sequencing rounds that come prior to the base round. At
minimum this would be the sequenced, unselected library, but it can also be all the 
sequenced reads that come before.
                                                                                               
All of these should be in the form of (comma delimited csv files by default) sequence-count files, 
as generated by the Jellyfish program or Biopieces using the "write_tab" function. 
Sequences are assumed to be unique. A command such as:

      awk '!(NR%2){print$0","p}{p=$0}' | sed 's/>//g' > [outfile]

can be used to transform fasta files that use the sequence count as a header
into the correct input format. All fields after the first two are ignored, but sequence
and count must be the first two fields. To strip out other fields, use cut. 

The input data should look something like this:

TGATTGTGATGGGTTTGCTGAGGTGGGCTCACGTGGATTG,793223
CGTCGATGCGGAATTGGTTTGCTGCGGTGGGCCCGCTAAG,336762
TGATCTGAATTCTGGTTTGCTGAGGTGGGCGAATTGAGTG,173770
GGGGCGCAATAGATGGTTTGCTGCGGTGGGCGTTGCGCCG,69127
AAATCGAGACTAACTTTACACGTGATTATGTCTTCTATCG,34489
GGGGCGCAATAGATGGTTTGCTGCGGTGGGCGTTGCGCCA,30532
GTGAGCATTGTTGGAAGGGGGCATGTAGGCCGTAGGGACT,21925
GGGCTATTACTGGTTTGCTGAGGTGGGCGGAATAGTTGGG,15732
TGAAGACTGTAGAGACTTCGCGGTAACCTGATTGAGTCGG,9958
AGGCCGCAGGGACGGAATAGACCCGCAGTAAGGTCTAAGT,7376
...
...
...

                                                                                               
All sequences above the given threshold are output, along with their respective counts and
enrichments. This is formatted as CSV, sorted by the highest degrees of enrichment from first 
to final rounds, and should be openable in spreadsheet programs like OpenOffice or Excel, as 
well as manipulated by UNIX tools. Data will be written to the file specified by the -o flag
and may overwrite any data already under that name. If no output file is given, output is
written to the terminal (stdout), and may be piped to other programs. The -v flag should probably
not be given if this tool is used in a pipeline or writing to a file, but may be useful for
debugging or entertainment purposes. 

** Elaborate**
Another use
could be to find the sequences most heavily selected against, in which case the unselected
library sequences would be used as the base file. 

Command Line Arguments:

positional arguments:
    base_file       Sequence-count file to which all others are compared,
                    usually the final round or round with highest bulk
                    affinity
    secondary_files List of sequence-count files, usually earlier SELEX
                    rounds you want to compare to the basefile

optional arguments:
    -h, --help      show help message

    -o [OUTFILE], --outfile [OUTFILE]
                    File to which output will be written as CSV. Writes to
                    stdout by default. OUTFILE specifies the filename, and 
                    will overwrite any other file of that name. 

    -d DELIMITER, --delimiter DELIMITER
                    Delimiter for input files between a sequence and it's
                    count. Defaults to ','. To use tabs enter '\t'.

    -w ZERO_WEIGHT, --zero_weight ZERO_WEIGHT
                    Weight given to sequences counted zero times, but
                    which appear in later rounds. The default is 0.5, but
                    this has relatively little theoretical basis.

    -t THRESHHOLD, --threshhold THRESHHOLD
                    Minimum count in the base filefor a sequence to be 
                    included in the analysis. Default is 0. This argument 
                    is useful for larger datasets where you know that low
                    abundance sequences will not be heavily enriched. 

    -n RECORDS, --records RECORDS
                    Number of sorted enrichment records to emit. Default
                    is all. Useful for ignoring poorly enriched sequences. 

    -v, --verbose   Print verbose output, including progress reports and
                    the mean and median of the data loaded.

